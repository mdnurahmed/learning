
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gke-ingress
  namespace: default 
  labels:
    name: gke-ingress
    app: gke-ingress
spec:
  rules:
  - 
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend
            port: 
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 7070
  selector:
    app: frontend 
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend 
    spec:
      containers:
      - name: frontend
        image: nurahmedsabbir/frontend:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
         - name: MY_IMAGE
           value: nurahmedsabbir/frontend:v1
         - name: MY_NODE_NAME
           valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
         - name: MY_POD_NAME
           valueFrom:
            fieldRef:
              fieldPath: metadata.name
         - name: MY_POD_NAMESPACE
           valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
         - name: MY_POD_IP
           valueFrom:
            fieldRef:
              fieldPath: status.podIP
         - name: MY_POD_SERVICE_ACCOUNT
           valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName

        ports:
        - containerPort: 7070
---