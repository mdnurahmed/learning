
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gke-ingress
  namespace: istio-system
  labels:
    name: gke-ingress
    app: gke-ingress
spec:
  rules:
  - 
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: istio-ingressgateway
            port: 
              number: 80

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
  namespace: default
spec:
  selector:
    istio: ingressgateway
  servers: 
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts: 
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-virtualservice
  namespace: default
spec:
  hosts:
  - "*"
  gateways:
  - my-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend
        port:
          number: 80
--- 
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 7070
  selector:
    app: frontend 
---
#health check 
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: http-hc-config
spec:
  healthCheck:
    checkIntervalSec: 15
    port: 15020
    type: HTTP
    requestPath: /healthz/ready
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend 
    spec:
      containers:
      - name: frontend
        image: nurahmedsabbir/frontend:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
         - name: MY_IMAGE
           value: nurahmedsabbir/frontend:v1
         - name: MY_NODE_NAME
           valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
         - name: MY_POD_NAME
           valueFrom:
            fieldRef:
              fieldPath: metadata.name
         - name: MY_POD_IP
           valueFrom:
            fieldRef:
              fieldPath: status.podIP

        ports:
        - containerPort: 7070
---